// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: grpc/chitchat.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemNotification_Type int32

const (
	SystemNotification_TYPE_UNSPECIFIED SystemNotification_Type = 0
	SystemNotification_JOIN             SystemNotification_Type = 1
	SystemNotification_LEAVE            SystemNotification_Type = 2
)

// Enum value maps for SystemNotification_Type.
var (
	SystemNotification_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "JOIN",
		2: "LEAVE",
	}
	SystemNotification_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"JOIN":             1,
		"LEAVE":            2,
	}
)

func (x SystemNotification_Type) Enum() *SystemNotification_Type {
	p := new(SystemNotification_Type)
	*p = x
	return p
}

func (x SystemNotification_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemNotification_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_grpc_chitchat_proto_enumTypes[0].Descriptor()
}

func (SystemNotification_Type) Type() protoreflect.EnumType {
	return &file_grpc_chitchat_proto_enumTypes[0]
}

func (x SystemNotification_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemNotification_Type.Descriptor instead.
func (SystemNotification_Type) EnumDescriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{7, 0}
}

// CLIENT -> SERVER
type ClientMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*ClientMessage_JoinRequest
	//	*ClientMessage_PublishRequest
	//	*ClientMessage_LeaveRequest
	Event         isClientMessage_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_grpc_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *ClientMessage) GetEvent() isClientMessage_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ClientMessage) GetJoinRequest() *JoinRequest {
	if x != nil {
		if x, ok := x.Event.(*ClientMessage_JoinRequest); ok {
			return x.JoinRequest
		}
	}
	return nil
}

func (x *ClientMessage) GetPublishRequest() *PublishRequest {
	if x != nil {
		if x, ok := x.Event.(*ClientMessage_PublishRequest); ok {
			return x.PublishRequest
		}
	}
	return nil
}

func (x *ClientMessage) GetLeaveRequest() *LeaveRequest {
	if x != nil {
		if x, ok := x.Event.(*ClientMessage_LeaveRequest); ok {
			return x.LeaveRequest
		}
	}
	return nil
}

type isClientMessage_Event interface {
	isClientMessage_Event()
}

type ClientMessage_JoinRequest struct {
	JoinRequest *JoinRequest `protobuf:"bytes,1,opt,name=join_request,json=joinRequest,proto3,oneof"`
}

type ClientMessage_PublishRequest struct {
	PublishRequest *PublishRequest `protobuf:"bytes,2,opt,name=publish_request,json=publishRequest,proto3,oneof"`
}

type ClientMessage_LeaveRequest struct {
	LeaveRequest *LeaveRequest `protobuf:"bytes,3,opt,name=leave_request,json=leaveRequest,proto3,oneof"`
}

func (*ClientMessage_JoinRequest) isClientMessage_Event() {}

func (*ClientMessage_PublishRequest) isClientMessage_Event() {}

func (*ClientMessage_LeaveRequest) isClientMessage_Event() {}

// client requesting to join
type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lamport       int64                  `protobuf:"varint,2,opt,name=lamport,proto3" json:"lamport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_grpc_chitchat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{1}
}

func (x *JoinRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JoinRequest) GetLamport() int64 {
	if x != nil {
		return x.Lamport
	}
	return 0
}

// client leaving
type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Lamport       int64                  `protobuf:"varint,2,opt,name=lamport,proto3" json:"lamport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_grpc_chitchat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{2}
}

func (x *LeaveRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LeaveRequest) GetLamport() int64 {
	if x != nil {
		return x.Lamport
	}
	return 0
}

// client requesting to publishing message to server
type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_grpc_chitchat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{3}
}

func (x *PublishRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// SERVER -> CLIENT
type ServerMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Event:
	//
	//	*ServerMessage_Ack_Join
	//	*ServerMessage_Chat
	//	*ServerMessage_SysNotif
	//	*ServerMessage_Error
	Event         isServerMessage_Event `protobuf_oneof:"event"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_grpc_chitchat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{4}
}

func (x *ServerMessage) GetEvent() isServerMessage_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *ServerMessage) GetAck_Join() *AckJoin {
	if x != nil {
		if x, ok := x.Event.(*ServerMessage_Ack_Join); ok {
			return x.Ack_Join
		}
	}
	return nil
}

func (x *ServerMessage) GetChat() *ChatBroadcast {
	if x != nil {
		if x, ok := x.Event.(*ServerMessage_Chat); ok {
			return x.Chat
		}
	}
	return nil
}

func (x *ServerMessage) GetSysNotif() *SystemNotification {
	if x != nil {
		if x, ok := x.Event.(*ServerMessage_SysNotif); ok {
			return x.SysNotif
		}
	}
	return nil
}

func (x *ServerMessage) GetError() *ErrorMessage {
	if x != nil {
		if x, ok := x.Event.(*ServerMessage_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isServerMessage_Event interface {
	isServerMessage_Event()
}

type ServerMessage_Ack_Join struct {
	Ack_Join *AckJoin `protobuf:"bytes,1,opt,name=ack_Join,json=ackJoin,proto3,oneof"`
}

type ServerMessage_Chat struct {
	Chat *ChatBroadcast `protobuf:"bytes,2,opt,name=chat,proto3,oneof"`
}

type ServerMessage_SysNotif struct {
	SysNotif *SystemNotification `protobuf:"bytes,3,opt,name=sysNotif,proto3,oneof"`
}

type ServerMessage_Error struct {
	Error *ErrorMessage `protobuf:"bytes,4,opt,name=error,proto3,oneof"`
}

func (*ServerMessage_Ack_Join) isServerMessage_Event() {}

func (*ServerMessage_Chat) isServerMessage_Event() {}

func (*ServerMessage_SysNotif) isServerMessage_Event() {}

func (*ServerMessage_Error) isServerMessage_Event() {}

// acknowledgement of join sent to client
type AckJoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Lamport       int64                  `protobuf:"varint,2,opt,name=lamport,proto3" json:"lamport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AckJoin) Reset() {
	*x = AckJoin{}
	mi := &file_grpc_chitchat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AckJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckJoin) ProtoMessage() {}

func (x *AckJoin) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckJoin.ProtoReflect.Descriptor instead.
func (*AckJoin) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{5}
}

func (x *AckJoin) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AckJoin) GetLamport() int64 {
	if x != nil {
		return x.Lamport
	}
	return 0
}

// broadcasting a client message
type ChatBroadcast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Lamport       int64                  `protobuf:"varint,4,opt,name=lamport,proto3" json:"lamport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatBroadcast) Reset() {
	*x = ChatBroadcast{}
	mi := &file_grpc_chitchat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatBroadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatBroadcast) ProtoMessage() {}

func (x *ChatBroadcast) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatBroadcast.ProtoReflect.Descriptor instead.
func (*ChatBroadcast) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{6}
}

func (x *ChatBroadcast) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ChatBroadcast) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatBroadcast) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatBroadcast) GetLamport() int64 {
	if x != nil {
		return x.Lamport
	}
	return 0
}

// chat notification when someone joins/leaves
type SystemNotification struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Type          SystemNotification_Type `protobuf:"varint,1,opt,name=type,proto3,enum=chitchat.SystemNotification_Type" json:"type,omitempty"`
	ClientId      string                  `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Name          string                  `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Lamport       int64                   `protobuf:"varint,4,opt,name=lamport,proto3" json:"lamport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemNotification) Reset() {
	*x = SystemNotification{}
	mi := &file_grpc_chitchat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemNotification) ProtoMessage() {}

func (x *SystemNotification) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemNotification.ProtoReflect.Descriptor instead.
func (*SystemNotification) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{7}
}

func (x *SystemNotification) GetType() SystemNotification_Type {
	if x != nil {
		return x.Type
	}
	return SystemNotification_TYPE_UNSPECIFIED
}

func (x *SystemNotification) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SystemNotification) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SystemNotification) GetLamport() int64 {
	if x != nil {
		return x.Lamport
	}
	return 0
}

type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Lamport       int64                  `protobuf:"varint,2,opt,name=lamport,proto3" json:"lamport,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_grpc_chitchat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_chitchat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_grpc_chitchat_proto_rawDescGZIP(), []int{8}
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorMessage) GetLamport() int64 {
	if x != nil {
		return x.Lamport
	}
	return 0
}

var File_grpc_chitchat_proto protoreflect.FileDescriptor

const file_grpc_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x13grpc/chitchat.proto\x12\bchitchat\"\xd8\x01\n" +
	"\rClientMessage\x12:\n" +
	"\fjoin_request\x18\x01 \x01(\v2\x15.chitchat.JoinRequestH\x00R\vjoinRequest\x12C\n" +
	"\x0fpublish_request\x18\x02 \x01(\v2\x18.chitchat.PublishRequestH\x00R\x0epublishRequest\x12=\n" +
	"\rleave_request\x18\x03 \x01(\v2\x16.chitchat.LeaveRequestH\x00R\fleaveRequestB\a\n" +
	"\x05event\";\n" +
	"\vJoinRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\alamport\x18\x02 \x01(\x03R\alamport\"<\n" +
	"\fLeaveRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\alamport\x18\x02 \x01(\x03R\alamport\"*\n" +
	"\x0ePublishRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\"\xe3\x01\n" +
	"\rServerMessage\x12.\n" +
	"\back_Join\x18\x01 \x01(\v2\x11.chitchat.AckJoinH\x00R\aackJoin\x12-\n" +
	"\x04chat\x18\x02 \x01(\v2\x17.chitchat.ChatBroadcastH\x00R\x04chat\x12:\n" +
	"\bsysNotif\x18\x03 \x01(\v2\x1c.chitchat.SystemNotificationH\x00R\bsysNotif\x12.\n" +
	"\x05error\x18\x04 \x01(\v2\x16.chitchat.ErrorMessageH\x00R\x05errorB\a\n" +
	"\x05event\"@\n" +
	"\aAckJoin\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x18\n" +
	"\alamport\x18\x02 \x01(\x03R\alamport\"t\n" +
	"\rChatBroadcast\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x18\n" +
	"\alamport\x18\x04 \x01(\x03R\alamport\"\xc9\x01\n" +
	"\x12SystemNotification\x125\n" +
	"\x04type\x18\x01 \x01(\x0e2!.chitchat.SystemNotification.TypeR\x04type\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\alamport\x18\x04 \x01(\x03R\alamport\"1\n" +
	"\x04Type\x12\x14\n" +
	"\x10TYPE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04JOIN\x10\x01\x12\t\n" +
	"\x05LEAVE\x10\x02\"B\n" +
	"\fErrorMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x18\n" +
	"\alamport\x18\x02 \x01(\x03R\alamport2U\n" +
	"\x0fChitChatService\x12B\n" +
	"\n" +
	"ChatStream\x12\x17.chitchat.ClientMessage\x1a\x17.chitchat.ServerMessage(\x010\x01B\aZ\x05/grpcb\x06proto3"

var (
	file_grpc_chitchat_proto_rawDescOnce sync.Once
	file_grpc_chitchat_proto_rawDescData []byte
)

func file_grpc_chitchat_proto_rawDescGZIP() []byte {
	file_grpc_chitchat_proto_rawDescOnce.Do(func() {
		file_grpc_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_grpc_chitchat_proto_rawDesc), len(file_grpc_chitchat_proto_rawDesc)))
	})
	return file_grpc_chitchat_proto_rawDescData
}

var file_grpc_chitchat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_grpc_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_grpc_chitchat_proto_goTypes = []any{
	(SystemNotification_Type)(0), // 0: chitchat.SystemNotification.Type
	(*ClientMessage)(nil),        // 1: chitchat.ClientMessage
	(*JoinRequest)(nil),          // 2: chitchat.JoinRequest
	(*LeaveRequest)(nil),         // 3: chitchat.LeaveRequest
	(*PublishRequest)(nil),       // 4: chitchat.PublishRequest
	(*ServerMessage)(nil),        // 5: chitchat.ServerMessage
	(*AckJoin)(nil),              // 6: chitchat.AckJoin
	(*ChatBroadcast)(nil),        // 7: chitchat.ChatBroadcast
	(*SystemNotification)(nil),   // 8: chitchat.SystemNotification
	(*ErrorMessage)(nil),         // 9: chitchat.ErrorMessage
}
var file_grpc_chitchat_proto_depIdxs = []int32{
	2, // 0: chitchat.ClientMessage.join_request:type_name -> chitchat.JoinRequest
	4, // 1: chitchat.ClientMessage.publish_request:type_name -> chitchat.PublishRequest
	3, // 2: chitchat.ClientMessage.leave_request:type_name -> chitchat.LeaveRequest
	6, // 3: chitchat.ServerMessage.ack_Join:type_name -> chitchat.AckJoin
	7, // 4: chitchat.ServerMessage.chat:type_name -> chitchat.ChatBroadcast
	8, // 5: chitchat.ServerMessage.sysNotif:type_name -> chitchat.SystemNotification
	9, // 6: chitchat.ServerMessage.error:type_name -> chitchat.ErrorMessage
	0, // 7: chitchat.SystemNotification.type:type_name -> chitchat.SystemNotification.Type
	1, // 8: chitchat.ChitChatService.ChatStream:input_type -> chitchat.ClientMessage
	5, // 9: chitchat.ChitChatService.ChatStream:output_type -> chitchat.ServerMessage
	9, // [9:10] is the sub-list for method output_type
	8, // [8:9] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_grpc_chitchat_proto_init() }
func file_grpc_chitchat_proto_init() {
	if File_grpc_chitchat_proto != nil {
		return
	}
	file_grpc_chitchat_proto_msgTypes[0].OneofWrappers = []any{
		(*ClientMessage_JoinRequest)(nil),
		(*ClientMessage_PublishRequest)(nil),
		(*ClientMessage_LeaveRequest)(nil),
	}
	file_grpc_chitchat_proto_msgTypes[4].OneofWrappers = []any{
		(*ServerMessage_Ack_Join)(nil),
		(*ServerMessage_Chat)(nil),
		(*ServerMessage_SysNotif)(nil),
		(*ServerMessage_Error)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_grpc_chitchat_proto_rawDesc), len(file_grpc_chitchat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_chitchat_proto_goTypes,
		DependencyIndexes: file_grpc_chitchat_proto_depIdxs,
		EnumInfos:         file_grpc_chitchat_proto_enumTypes,
		MessageInfos:      file_grpc_chitchat_proto_msgTypes,
	}.Build()
	File_grpc_chitchat_proto = out.File
	file_grpc_chitchat_proto_goTypes = nil
	file_grpc_chitchat_proto_depIdxs = nil
}
